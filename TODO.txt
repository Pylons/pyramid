Pyramid TODOs
=============

Should-Have
-----------

- Make "localizer" a property of request (instead of requiring
  "get_localizer(request)"

- Make ``current_route_url`` a method of request.

- Create a ``current_route_path`` function and make it a method of request.

- Add narrative docs for wsgiapp and wsgiapp2.

- Provide a way to set the authentication policy and the authorization policy
  during a config.include (they are related, so just exposing the currently
  underscored-private _set_auth* methods won't cut it).

- Rename all config file values with a ``pyramid.`` prefix.

- Try to figure out a way to keep "settings" as the original dictionary
  passed to the Configurator instead of copying it.

- Merge aodag's config.include(route_prefix=...) fork.

- Michael's route group work.

- Kill off ``bfg.routes`` envvars in router.

- Provide a ``has_view`` function.

- Alias the stupid long default session factory name.

- Fix indirect circular import between router and config.

Nice-to-Have
------------

- Maybe add ``add_renderer_globals`` method to Configurator.

- Speed up startup time (defer _bootstrap and registerCommonDirectives()
  until needed by ZCML, as well as unfound speedups).

- Nicer Mako exceptions in WebError.

- Better "Extending" chapter.

- Try to make test suite pass on IronPython.

- Non-bwcompat use of threadlocals that need to be documented or ameliorated:

  security.principals_allowed_by_permission

  resource.OverrideProvider._get_overrides: can't credibly be removed,
  because it stores an overrideprovider as a module-scope global.

  traversal.traverse: this API is a stepchild, and needs to be changed.

  Configurator.add_translation_dirs: not passed any context but a message,
  can't credibly be removed.

- Supply ``X-Vhm-Host`` support.

- Basic WSGI documentation (pipeline / app / server).

- Change docs about creating a venusian decorator to not use ZCA.

- Try to better explain the relationship between a renderer and a
  template in the templates chapter and elsewhere.  Scan the
  documentation for reference to a renderer as *only* view
  configuration (it's a larger concept now).

- Create a ``render_view`` that works by using config.derive_view
  against an existing view instead of querying the registry.

- Create a function which performs a recursive request.

- Debug option to print view matching decision.

- Update App engine chapter with less creaky directions.

- Add functionality that mocks the behavior of ``repoze.browserid``.

- Consider implementing the API outlined in
  http://plope.com/pyramid_auth_design_api_postmortem, phasing out the
  current auth-n-auth abstractions in a backwards compatible way.

