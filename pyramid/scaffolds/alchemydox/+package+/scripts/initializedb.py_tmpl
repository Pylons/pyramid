"""
@file {{project}}\{{package}}\scripts\initializedb.py {{package}} Application Scripts InitializeDB
@package {{project}}.{{package}}.scripts.initializedb {{package}} Application Scripts InitializeDB
@name {{package}} Application Scripts InitializeDB

More details about {{package}} scripts initializedb

@author author
@date date
@version 0.0
"""

## @var __author__
# The name of the author, or authors, of {{package}} application
__author__ = 'author'
## @var __version__
# The version of the initializedb file
__version__ = '0.0'

import os
import sys
import transaction

from sqlalchemy import engine_from_config

from pyramid.paster import (
    get_appsettings,
    setup_logging,
    )

from pyramid.scripts.common import parse_vars

from ..models import (
    DBSession,
    MyModel,
    Base,
    )


def usage(argv):
    """Usage Routine For InitializeDB
    @brief The usage routine providing the usage format string
    @param argv Contains the input parameters to the initializedb"""
    cmd = os.path.basename(argv[0])
    print('usage: %s <config_uri> [var=value]\n'
          '(example: "%s development.ini")' % (cmd, cmd))
    sys.exit(1)


def main(argv=sys.argv):
    """Main Routine For InitializeDB
    @brief The main routine for initializing the database
    @param argv Contains the input parameters to the initializedb"""
    if len(argv) < 2:
        usage(argv)
    config_uri = argv[1]
    options = parse_vars(argv[2:])
    setup_logging(config_uri)
    settings = get_appsettings(config_uri, options=options)
    engine = engine_from_config(settings, 'sqlalchemy.')
    DBSession.configure(bind=engine)
    Base.metadata.create_all(engine)
    with transaction.manager:
        model = MyModel(name='one', value=1)
        DBSession.add(model)
